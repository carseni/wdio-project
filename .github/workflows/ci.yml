name: CI - Realworld Stack (Backend + UI + WDIO + Allure Pages)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    name: e2e-tests-${{ github.ref_name }}-${{ github.run_number }}
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: realworld
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      # 📥 Checkout WDIO project
      - name: Checkout WDIO project
        uses: actions/checkout@v4

      # ⚙️ Node.js setup
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # 🕒 Wait for DB readiness
      - name: Wait for Postgres
        run: |
          echo "Waiting for Postgres..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "✅ Postgres is ready!"
              break
            fi
            echo "⏳ Waiting ($i/30)..."
            sleep 2
          done

      # 🧩 Backend setup
      - name: Clone Backend
        run: |
          git clone https://github.com/carseni/realworld-backend.git realworld-backend
          cd realworld-backend
          npm ci
          npx prisma generate
          npx prisma migrate deploy
          npm run build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/realworld

      # 🧾 Verify DB tables
      - name: Verify Database schema
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          echo "📋 Checking database tables..."
          PGPASSWORD=postgres psql -h localhost -U postgres -d realworld -c "\dt"
        env:
          PGPASSWORD: postgres

      # 🚀 Start backend API
      - name: Start Backend (port 3001)
        run: |
          cd realworld-backend
          PORT=3001 npx nx run api:serve:production &
          echo "Waiting for API to be ready on port 3001..."
          for i in {1..40}; do
            if curl -s http://localhost:3001/api/tags > /dev/null; then
              echo "✅ API is up!"
              break
            fi
            echo "⏳ Waiting ($i/40)..."
            sleep 3
          done
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/realworld

      # 🎨 Frontend build (on 4100)
      - name: Clone Frontend
        run: |
          git clone https://github.com/carseni/realworld-ui.git realworld-ui
          cd realworld-ui
          npm ci
          PORT=4100 npm run build

      # 🧪 Run WDIO tests
      - name: Run WDIO Tests (spec + BDD)
        run: |
          npm ci
          npm run test:all
        env:
          CI: true
          API_URL: http://localhost:3001/api

      # 📊 Upload Allure results
      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: reports/allure-results/
          if-no-files-found: warn

      # 🧱 Generate Allure report
      - name: Generate Allure report
        if: always()
        run: |
          npx allure generate reports/allure-results --clean -o reports/allure-report || true
          if [ ! -f reports/allure-report/index.html ]; then
            mkdir -p reports/allure-report
            echo "<html><body><h1>Test Run Failed</h1><p>Check job logs for details.</p></body></html>" > reports/allure-report/index.html
          fi

      # 💾 Upload HTML report as artifact
      - name: Upload Allure HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: reports/allure-report/
          if-no-files-found: warn

      # 🌐 Deploy Allure report to GitHub Pages
      - name: Deploy Allure report to GitHub Pages
        if: always() && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: reports/allure-report
          publish_branch: gh-pages
          force_orphan: true

      # 💬 Add PR comment with live Allure report
      - name: Comment on Pull Request with Allure Report
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: allurereport
          message: |
            🧾 **Allure Report:** [View Results](https://carseni.github.io/wdio-project/)
